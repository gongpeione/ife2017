{"version":3,"sources":["webpack:///6.index.js","webpack:///./src/business/snake/Snake.js","webpack:///./src/business/snake/style.scss","webpack:///./src/business/snake/style.scss?c71d","webpack:///./src/business/snake/template.html","webpack:///./src/business/snake/index.js"],"names":["webpackJsonp","320","module","exports","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_gtool","POINT_TYPE","empty","snake","food","defaultOption","width","height","blockWidth","color","bg","snakeHead","DIRECTION","up","CONST","KEY_CODE","UP","right","RIGHT","down","DOWN","left","LEFT","backwardMap","backward","forEach","dirPair","keyCodeList","direction","control","Snake","parent","option","this","g","$","merge","map","snakeBody","snakeHeadAnchor","isPlaying","speed","tagName","toLowerCase","canvas","document","createElement","appendChild","brush","getContext","init","blockX","blockY","y","row","x","push","fillStyle","fillRect","randomFood","mapRender","keydownHandler","keydown","bind","addEventListener","startTick","_this","setTimeout","snakeMove","e","keycode","keyCode","indexOf","console","log","Math","random","position","round","snakeAtPosition","foodPosition","_brush","startPoint","snakeHeadAtPosition","foodAtPosition","apply","concat","withoutHead","arguments","undefined","body","mapPosition","JSON","stringify","tmpBody","assign","splice","head","snakeLength","oldPosition","end","tempPosition","default","326","335","content","locals","345","86","_interopRequireDefault","obj","__esModule","create","innerHTML","_template2","_Snake2","_template","_Snake"],"mappings":"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","file":"6.index.js","sourcesContent":["webpackJsonp([6,12],{\n\n/***/ 320:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _gtool = __webpack_require__(59);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar POINT_TYPE = {\n    empty: 0,\n    snake: 1,\n    food: 2\n};\nvar defaultOption = {\n    width: 600,\n    height: 400,\n    blockWidth: 20,\n    color: {\n        bg: '#333',\n        snake: '#eee',\n        snakeHead: '#fff',\n        food: '#796'\n    }\n};\nvar DIRECTION = {\n    up: _gtool.CONST.KEY_CODE.UP,\n    right: _gtool.CONST.KEY_CODE.RIGHT,\n    down: _gtool.CONST.KEY_CODE.DOWN,\n    left: _gtool.CONST.KEY_CODE.LEFT\n};\n\nvar backwardMap = {};\nvar backward = [['up', 'down'], ['down', 'up'], ['left', 'right'], ['right', 'left']];\nbackward.forEach(function (dirPair) {\n    backwardMap[DIRECTION[dirPair[0]]] = DIRECTION[dirPair[1]];\n});\n\nvar keyCodeList = {\n    direction: [DIRECTION.up, DIRECTION.right, DIRECTION.down, DIRECTION.left],\n    control: []\n};\n\nvar Snake = function () {\n    function Snake(parent, option) {\n        _classCallCheck(this, Snake);\n\n        this.parent = typeof parent === 'string' ? _gtool.g.$(parent) : parent;\n        this.option = _gtool.g.merge(defaultOption, option);\n        this.map = [];\n        this.snakeBody = [[2, 0], [1, 0], [0, 0]];\n        this.snakeHeadAnchor = 0;\n        this.direction = DIRECTION.right;\n        this.isPlaying = false;\n        this.speed = 1;\n\n        if (this.parent.tagName.toLowerCase() === 'canvas') {\n            this.canvas = parent;\n        } else {\n            this.canvas = document.createElement('canvas');\n            this.parent.appendChild(this.canvas);\n\n            this.canvas.width = this.option.width;\n            this.canvas.height = this.option.height;\n        }\n        this.width = this.canvas.width;\n        this.height = this.canvas.height;\n\n        this.brush = this.canvas.getContext('2d');\n\n        this.init();\n    }\n\n    _createClass(Snake, [{\n        key: 'init',\n        value: function init() {\n\n            var blockX = this.width / this.option.blockWidth;\n            var blockY = this.height / this.option.blockWidth;\n\n            for (var y = 0; y < blockY; y++) {\n                var row = [];\n                for (var x = 0; x < blockX; x++) {\n                    row.push(POINT_TYPE.empty);\n                }\n                this.map.push(row);\n            }\n\n            this.brush.fillStyle = '#999';\n            this.brush.fillRect(0, 0, this.width, this.height);\n\n            this.randomFood();\n            this.mapRender();\n\n            this.keydownHandler = this.keydown.bind(this);\n            document.addEventListener('keydown', this.keydownHandler);\n\n            this.isPlaying = true;\n            this.startTick();\n        }\n    }, {\n        key: 'startTick',\n        value: function startTick() {\n            var _this = this;\n\n            setTimeout(function () {\n                if (_this.isPlaying) {\n                    _this.snakeMove();\n                    _this.startTick();\n                }\n            }, 200 * this.speed);\n        }\n    }, {\n        key: 'keydown',\n        value: function keydown(e) {\n            var keycode = e.keyCode;\n            if (keyCodeList.direction.indexOf(keycode) >= 0) {\n                console.log(this.direction, keycode, backwardMap[keycode]);\n                if (this.direction === keycode || this.direction === backwardMap[keycode]) {\n                    return;\n                }\n                this.direction = keycode;\n            }\n        }\n    }, {\n        key: 'randomFood',\n        value: function randomFood() {\n            var x = Math.random() * (this.map[0].length - 1);\n            var y = Math.random() * (this.map.length - 1);\n            var position = [Math.round(x), Math.round(y)];\n            console.log(position);\n            if (this.snakeAtPosition(position)) {\n                this.randomFood();\n            } else {\n                this.foodPosition = position;\n            }\n        }\n    }, {\n        key: 'end',\n        value: function end() {\n            this.isPlaying = false;\n        }\n    }, {\n        key: 'mapRender',\n        value: function mapRender() {\n            for (var y = 0; y < this.map.length; y++) {\n                for (var x = 0; x < this.map[y].length; x++) {\n                    var _brush;\n\n                    var position = [x, y];\n                    var startPoint = [x * this.option.blockWidth, y * this.option.blockWidth];\n\n                    this.brush.fillStyle = this.option.color.bg;\n\n                    if (this.snakeAtPosition(position)) {\n                        if (this.snakeHeadAtPosition(position)) {\n                            this.brush.fillStyle = this.option.color.snakeHead;\n                        } else {\n                            this.brush.fillStyle = this.option.color.snake;\n                        }\n                    }\n\n                    if (this.foodAtPosition(position)) {\n                        this.brush.fillStyle = this.option.color.food;\n                    }\n\n                    (_brush = this.brush).fillRect.apply(_brush, startPoint.concat([this.option.blockWidth, this.option.blockWidth]));\n                }\n            }\n        }\n    }, {\n        key: 'snakeAtPosition',\n        value: function snakeAtPosition(position) {\n            var withoutHead = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var body = void 0;\n            var mapPosition = JSON.stringify(position);\n            var tmpBody = Object.assign([], this.snakeBody);\n            if (withoutHead) {\n                tmpBody.splice(this.snakeHeadAnchor, 1);\n                body = JSON.stringify(tmpBody);\n            } else {\n                body = JSON.stringify(tmpBody);\n            }\n\n            return body.indexOf(mapPosition) >= 0;\n        }\n    }, {\n        key: 'snakeHeadAtPosition',\n        value: function snakeHeadAtPosition(position) {\n            var head = JSON.stringify(this.snakeBody[this.snakeHeadAnchor]);\n            var mapPosition = JSON.stringify(position);\n            return head.indexOf(mapPosition) === 0;\n        }\n    }, {\n        key: 'foodAtPosition',\n        value: function foodAtPosition(position) {\n            var food = JSON.stringify(this.foodPosition);\n            var mapPosition = JSON.stringify(position);\n            return food.indexOf(mapPosition) === 0;\n        }\n    }, {\n        key: 'snakeMove',\n        value: function snakeMove() {\n            var head = this.snakeHeadAnchor;\n            var snakeLength = this.snakeBody.length;\n            var oldPosition = Object.assign([], this.snakeBody[head]);\n\n            switch (this.direction) {\n                case DIRECTION.right:\n                    this.snakeBody[head][0]++;break;\n                case DIRECTION.left:\n                    this.snakeBody[head][0]--;break;\n                case DIRECTION.up:\n                    this.snakeBody[head][1]--;break;\n                case DIRECTION.down:\n                    this.snakeBody[head][1]++;break;\n            }\n\n            if (this.snakeBody[head][0] > this.map[0].length - 1 || this.snakeBody[head][0] < 0 || this.snakeBody[head][1] > this.map.length - 1 || this.snakeBody[head][1] < 0 || this.snakeAtPosition(this.snakeBody[head], true)) {\n                console.log('end');\n                this.end();\n                return;\n            }\n\n            for (var i = 1; i < snakeLength; i++) {\n                var tempPosition = this.snakeBody[i];\n                this.snakeBody[i] = oldPosition;\n                oldPosition = tempPosition;\n            }\n\n            if (this.foodAtPosition([this.snakeBody[head][0], this.snakeBody[head][1]])) {\n                this.snakeBody.push(oldPosition);\n                this.randomFood();\n            }\n\n            this.mapRender();\n        }\n    }]);\n\n    return Snake;\n}();\n\nexports.default = Snake;\n\n/***/ }),\n\n/***/ 326:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(315)();\n// imports\n\n\n// module\nexports.push([module.i, \".snake{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 335:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(326);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(316)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/sass-loader/index.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/sass-loader/index.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ 345:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=snake> <div class=snake-wrap></div> </div>\";\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.create = create;\n\nvar _template = __webpack_require__(345);\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _gtool = __webpack_require__(59);\n\n__webpack_require__(335);\n\nvar _Snake = __webpack_require__(320);\n\nvar _Snake2 = _interopRequireDefault(_Snake);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction create(parent) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    parent = typeof parent === 'string' ? _gtool.g.$(parent) : parent;\n\n    parent.innerHTML = _template2.default;\n\n    new _Snake2.default('.snake-wrap', {\n        color: {\n            bg: '#232',\n            snake: '#985'\n        }\n    });\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 6.index.js","import { g, CONST } from '../../gtool';\n\nconst POINT_TYPE = {\n    empty: 0,\n    snake: 1,\n    food: 2\n};\nconst defaultOption = {\n    width: 600,\n    height: 400,\n    blockWidth: 20,\n    color: {\n        bg: '#333',\n        snake: '#eee',\n        snakeHead: '#fff',\n        food: '#796'\n    },\n};\nconst DIRECTION = {\n    up: CONST.KEY_CODE.UP,\n    right: CONST.KEY_CODE.RIGHT,\n    down: CONST.KEY_CODE.DOWN,\n    left: CONST.KEY_CODE.LEFT\n};\n\n// Generate direction backward map\nconst backwardMap = {};\nconst backward = [['up', 'down'], ['down', 'up'], ['left', 'right'], ['right', 'left']];\nbackward.forEach(dirPair => {\n    backwardMap[DIRECTION[dirPair[0]]] = DIRECTION[dirPair[1]];\n});\n\nconst keyCodeList = {\n    direction: [DIRECTION.up, DIRECTION.right, DIRECTION.down, DIRECTION.left],\n    control: []\n}\nexport default class Snake {\n    constructor (parent, option) {\n        this.parent = typeof parent === 'string' ? g.$(parent) : parent;\n        this.option = g.merge(defaultOption, option);\n        this.map = [];\n        this.snakeBody = [[2, 0], [1, 0], [0, 0]];\n        this.snakeHeadAnchor = 0;\n        this.direction = DIRECTION.right;\n        this.isPlaying = false;\n        this.speed = 1;\n\n        // canvas init\n        if (this.parent.tagName.toLowerCase() === 'canvas') {\n            this.canvas = parent;\n        } else {\n            this.canvas = document.createElement('canvas');\n            this.parent.appendChild(this.canvas);\n\n            this.canvas.width = this.option.width;\n            this.canvas.height = this.option.height;\n        }\n        this.width = this.canvas.width;\n        this.height = this.canvas.height;\n        \n        this.brush = this.canvas.getContext('2d');\n\n        this.init();\n    }\n\n    init () {\n\n        const blockX = this.width / this.option.blockWidth;\n        const blockY = this.height / this.option.blockWidth;\n\n        // map init\n        for (let y = 0; y < blockY; y++) {\n            const row = [];\n            for (let x = 0; x < blockX; x++) {\n                row.push(POINT_TYPE.empty);\n            }\n            this.map.push(row);\n        }\n\n        // background under map\n        this.brush.fillStyle = '#999';\n        this.brush.fillRect(0, 0, this.width, this.height);\n\n        this.randomFood();\n        this.mapRender();\n\n        this.keydownHandler = this.keydown.bind(this);\n        document.addEventListener('keydown', this.keydownHandler);\n\n        this.isPlaying = true;\n        this.startTick();\n    }\n\n    startTick () {\n        setTimeout(() => {\n            if (this.isPlaying) {\n                this.snakeMove();\n                this.startTick();\n            }\n        }, 200 * this.speed);\n    }\n\n    keydown (e) {\n        const keycode = e.keyCode;\n        if (keyCodeList.direction.indexOf(keycode) >= 0) {\n            console.log(this.direction, keycode, backwardMap[keycode]);\n            if (this.direction === keycode || this.direction === backwardMap[keycode]) {\n                return\n            }\n            this.direction = keycode;\n        }\n    }\n\n    randomFood () {\n        const x = Math.random() * (this.map[0].length - 1);\n        const y = Math.random() * (this.map.length - 1);\n        const position = [Math.round(x), Math.round(y)];\n        console.log(position);\n        if (this.snakeAtPosition(position)) {\n            this.randomFood();\n        } else {\n            this.foodPosition = position;\n        }\n    }\n\n    end () {\n        this.isPlaying = false;\n        // document.removeEventListener('keydown', this.keydownHandler);\n    }\n\n    mapRender () {\n        // console.log(JSON.stringify(this.map));\n        for (let y = 0; y < this.map.length; y++) {\n            for (let x = 0; x < this.map[y].length; x++) {\n                \n                const position = [x, y];\n                const startPoint = [x * this.option.blockWidth, y * this.option.blockWidth];\n\n                this.brush.fillStyle = this.option.color.bg;\n                // To determine whether the snake's body at this position\n                if (this.snakeAtPosition(position)) {\n                    if (this.snakeHeadAtPosition(position)) {\n                        this.brush.fillStyle = this.option.color.snakeHead;\n                    } else {\n                        this.brush.fillStyle = this.option.color.snake;\n                    }\n                }\n\n                if (this.foodAtPosition(position)) {\n                    this.brush.fillStyle = this.option.color.food;\n                }\n                \n                this.brush.fillRect(\n                    ...startPoint, \n                    this.option.blockWidth, \n                    this.option.blockWidth\n                );\n                // row.push(POINT_TYPE.empty);\n            }\n        }\n    }\n\n    snakeAtPosition (position, withoutHead = false) {\n        let body;\n        const mapPosition = JSON.stringify(position);\n        const tmpBody = Object.assign([], this.snakeBody);\n        if (withoutHead) {\n            tmpBody.splice(this.snakeHeadAnchor, 1)\n            body = JSON.stringify(tmpBody);\n        } else {\n            body = JSON.stringify(tmpBody);\n        }\n        // console.log(body, withoutHead);\n        return body.indexOf(mapPosition) >= 0;\n    }\n    snakeHeadAtPosition (position) {\n        const head = JSON.stringify(this.snakeBody[this.snakeHeadAnchor]);\n        const mapPosition = JSON.stringify(position);\n        return head.indexOf(mapPosition) === 0;\n    }\n    foodAtPosition (position) {\n        const food = JSON.stringify(this.foodPosition);\n        const mapPosition = JSON.stringify(position);\n        return food.indexOf(mapPosition) === 0;\n    }\n\n    snakeMove () {\n        const head = this.snakeHeadAnchor;\n        const snakeLength = this.snakeBody.length;\n        let oldPosition = Object.assign([], this.snakeBody[head]);\n\n        // Update snake's head position\n        switch (this.direction) {\n            case DIRECTION.right: this.snakeBody[head][0]++; break;\n            case DIRECTION.left: this.snakeBody[head][0]--; break;\n            case DIRECTION.up: this.snakeBody[head][1]--; break;\n            case DIRECTION.down: this.snakeBody[head][1]++; break;\n        }\n\n        // crossing the wall or biting itself, game over\n        if (\n            this.snakeBody[head][0] > this.map[0].length - 1 ||\n            this.snakeBody[head][0] < 0 ||\n            this.snakeBody[head][1] > this.map.length - 1 ||\n            this.snakeBody[head][1] < 0 ||\n            this.snakeAtPosition(this.snakeBody[head], true)\n        ) {\n            console.log('end');\n            this.end();\n            return;\n        }\n\n        for (let i = 1; i < snakeLength; i++) {\n            const tempPosition = this.snakeBody[i];\n            this.snakeBody[i] = oldPosition;\n            oldPosition = tempPosition;\n        }\n        \n        // little snake ate the food and the tail grow longer\n        if (this.foodAtPosition([this.snakeBody[head][0], this.snakeBody[head][1]])) {\n            this.snakeBody.push(oldPosition);\n            this.randomFood();\n        }\n        \n        this.mapRender();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/business/snake/Snake.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".snake{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?minimize!./~/sass-loader!./src/business/snake/style.scss\n// module id = 326\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/sass-loader/index.js!./style.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/sass-loader/index.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/sass-loader/index.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/business/snake/style.scss\n// module id = 335\n// module chunks = 6","module.exports = \"<div class=snake> <div class=snake-wrap></div> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/business/snake/template.html\n// module id = 345\n// module chunks = 6","import template from './template.html';\nimport { g } from '../../gtool';\nimport './style.scss';\nimport Snake from './Snake';\n\nexport function create (parent, option = []) {\n    parent = typeof parent === 'string' ? g.$(parent) : parent;\n\n    parent.innerHTML = template;\n\n    new Snake('.snake-wrap', {\n        color: {\n            bg: '#232',\n            snake: '#985'\n        }\n    });\n}\n\n\n// WEBPACK FOOTER //\n// ./src/business/snake/index.js"],"sourceRoot":""}