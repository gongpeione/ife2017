{"version":3,"sources":["webpack:///./src/nuomi/markdown/index.js","webpack:///./src/nuomi/markdown/LNote.js","webpack:///./src/nuomi/markdown/Markdown.js","webpack:///./src/nuomi/markdown/style.scss","webpack:///./src/nuomi/markdown/style.scss?2f02","webpack:///./~/gmd-markdown-parser/index.js","webpack:///./~/gmd-markdown-parser/lib/GMD.js","webpack:///./src/nuomi/markdown/template.html"],"names":["create","parent","option","$","innerHTML","LNote","callback","defaultVal","document","querySelector","section","lineNums","textarea","lineCounter","init","lines","createElement","classList","add","setAttribute","appendChild","mutation","MutationObserver","mutations","newContent","getContent","text","updateNums","nums","saveContent","html","observe","childList","characterData","subtree","addEventListener","innerText","length","e","keyCode","preventDefault","loadContent","setContent","newCounter","fragment","createDocumentFragment","i","newNum","rmAmount","lastChild","remove","index","num","dataset","Array","from","querySelectorAll","reduce","str","line2","content","localStorage","setItem","isHTML","split","map","line","join","getItem","MarkDown","editor","output","gmd","lnote","update","newVal","parse"],"mappings":"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aAAa,UAAU,sBAAsB,wBAAwB,sDAAsD,uBAAuB,gBAAgB,WAAW,KAAK,wBAAwB,qBAAqB;;AAE7uD;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;AACA,iDAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gCAAgC,UAAU,EAAE;AAC5C,C;;;;;;;ACpBA;AACA,qB;;;;;;;ACDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,8BAA8B,EAAE,WAAW,EAAE;AAC7C;AACA;AACA,aAAa;AACb;AACA,0BAA0B,EAAE,OAAO,EAAE;AACrC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,+BAA+B,EAAE,QAAQ,EAAE;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,GAAG;;AAEvC;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;;AAEA;AACA,4B;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,6CAA6C,SAAS;AACtD;AACA,qBAAqB;;AAErB;;AAEA;;AAEA;AACA;;AAEA,4DAA4D,KAAK;;AAEjE;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,KAAK;AAC9B,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,qB;;;;;;;ACzKA,gJ","file":"2.index.js","sourcesContent":["import template from './template.html';\nimport { g } from '../../gtool';\nimport './style.scss';\nimport Markdown from './Markdown';\n\nexport function create (parent, option = []) {\n    parent = typeof parent === 'string' ? g.$(parent) : parent;\n\n    parent.innerHTML = template;\n\n    new Markdown('.markdown .editor', '.markdown .out');\n}\n\n\n// WEBPACK FOOTER //\n// ./src/nuomi/markdown/index.js","export default class LNote {\n\n    constructor (parent, callback, defaultVal = 'Edit here') {\n        this.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n        this.section = {\n            lineNums: null,\n            textarea: null\n        };\n        this.callback = callback;\n\n        this.lineCounter = 0;\n        this.defaultVal = defaultVal;\n\n        this.init();\n    }\n\n    init () {\n\n        const lines = this.section.lineNums = document.createElement('div');\n        const textarea = this.section.textarea = document.createElement('div');\n\n        lines.classList.add('line-nums');\n        textarea.classList.add('textarea');\n        textarea.setAttribute('contenteditable', true);\n\n        this.parent.appendChild(lines);\n        this.parent.appendChild(textarea);\n\n        this.mutation = new MutationObserver((mutations) => {\n\n            const newContent = this.getContent();\n\n            this.callback(newContent.text);\n            this.updateNums(newContent.nums); \n            this.saveContent(newContent.html);\n        });\n\n        this.mutation.observe(textarea, { \n            // attributes: true, \n            childList: true, \n            characterData: true,\n            subtree: true\n        });\n\n        textarea.addEventListener('keydown', e => {\n            if (this.lineCounter > 1) {\n                return;\n            }\n            if (textarea.innerText.length === 1 && e.keyCode === 8) {\n                e.preventDefault();\n            }\n        });\n\n        const defaultVal = this.loadContent();\n        if (defaultVal) {\n            this.setContent(defaultVal, true);\n        } else {\n            this.setContent(this.defaultVal);\n        }\n\n        this.callback(defaultVal);\n    }\n\n    updateNums (newCounter) {\n\n        if (newCounter === this.lineCounter) {\n            return;\n        }\n\n        // Add new lines\n        if (newCounter > this.lineCounter) {\n            const fragment = document.createDocumentFragment();\n\n            for (let i = this.lineCounter; i < newCounter; i++, this.lineCounter++) {\n                fragment.appendChild(this.newNum(i + 1));\n            }\n\n            this.section.lineNums.appendChild(fragment);\n        }\n\n        // Remove lines\n        if (newCounter < this.lineCounter) {\n            \n            const rmAmount = this.lineCounter - newCounter;\n            \n            if (rmAmount < 50) {\n                for (let i = 0; i < rmAmount; i++, this.lineCounter--) {\n                    this.section.lineNums.lastChild.remove();\n                }\n                return;\n            }\n            \n            this.section.lineNums.innerHTML = '';\n            const fragment = document.createDocumentFragment();\n\n            for (let i = 1; i <= newCounter; i++, this.lineCounter++) {\n                fragment.appendChild(this.newNum(i));\n            }\n            this.section.lineNums.appendChild(fragment);\n        }\n    }\n\n    newNum (index) {\n\n        const num = document.createElement('p');\n                \n        num.classList.add('line-num');\n        num.dataset.index = index;\n        num.innerText = index;\n\n        return num;\n    }\n\n    getContent () {\n        const lines = Array.from(this.section.textarea.querySelectorAll('p'));\n        const text = lines.reduce((str, line2) => str + line2.innerText + '\\n', '');\n\n        return {\n            nums: lines.length,\n            text: text,\n            html: this.section.textarea.innerHTML\n        }\n    }\n\n    saveContent (content) {\n        localStorage.setItem('GMD_content', content);\n    }\n\n    setContent (content, isHTML) {\n        if (isHTML) {\n            this.section.textarea.innerHTML = content;\n        } else {\n            this.section.textarea.innerHTML = content.split('\\n').map(line => `<p>${line}</p>`).join('');\n        }\n        \n    }\n\n    loadContent () {\n        return localStorage.getItem('GMD_content') || false;\n    }\n }\n\n\n// WEBPACK FOOTER //\n// ./src/nuomi/markdown/LNote.js","import { g } from '../../gtool';\nimport GMD from 'gmd-markdown-parser';\nimport LNote from './LNote';\n\nconst defaultVal = `# h1\\n\n\n## h2\n\n### h3\n\n#### h4\n\n##### h5\n\n###### h6\n\n---\n\nCode: \\`code\\`, em: *em*, strong: **strong**, strike through: ~~through~~\n\n---\n\n[Link](https://google.com)\n\n![img](https://ww4.sinaimg.cn/large/006tNc79gy1fdk3zs7r9nj308c08cdi7.jpg)\n\n> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Reiciendis veniam recusandae maiores aperiam? Vero amet iste aliquam, architecto sapiente ipsum provident, adipisci molestiae. Incidunt natus, tempora ratione atque praesentium \n> assumenda!\n\n---\n\npre:\n\n\\`\\`\\`javascript\nalert(1)\n\\`\\`\\`\n\n---\n\n- unordered list1\n- list1\n- list1\n- list1\n\n1. ordered list\n2. ordered list\n3. ordered list\n4. ordered list`;\n\nexport default class MarkDown {\n\n    constructor (editor, output) {\n\n        this.editor = typeof editor === 'string' ? g.$(editor) : editor;\n        this.output = typeof output === 'string' ? g.$(output) : output;\n\n        this.gmd = new GMD();\n        this.lnote = new LNote(this.editor, newVal => {\n            this.update(newVal);\n        }, defaultVal);\n\n        this.init();\n    }\n\n    init () {\n\n        // this.textarea = new g.vdom('textarea', {\n        //     class: 'g-MarkDown'\n        // }, [ this.parent.innerHTML.replace(/&gt;/g, '>') ]).render();\n\n        // this.textarea.addEventListener('keyup', e => {\n        //     this.update();\n        // })\n\n        // this.parent.innerHTML = '';\n        // this.parent.appendChild(this.textarea);\n\n        // this.update();\n        // this.data.setAttribute('contenteditable', true);\n        \n        // this.mutation = new MutationObserver(function(mutations) {\n        //     mutations.forEach(function(mutation) {\n        //         console.log(mutation, mutation.type);\n        //     });    \n        // });\n        // this.mutation.observe(this.data, { \n        //     // attributes: true, \n        //     childList: true, \n        //     characterData: true,\n        //     subtree: true\n        // });\n    }\n\n    update (newVal) {\n        this.output.innerHTML = this.gmd.parse(newVal);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/nuomi/markdown/Markdown.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".markdown{height:100%;overflow:auto;display:flex}.markdown .content{flex:1}.markdown .content textarea{width:100%;height:100%;max-width:100%;max-height:100%;border:none;background:#2a2f31;color:#eee;padding:.1rem;outline:none}.markdown .cover{flex:1;height:100%;overflow:auto}.markdown .out{min-height:100%;overflow:auto;padding:.2rem .3rem;font-size:.12rem}.markdown .out a{color:#1d71c0;text-decoration:underline}.markdown .out h1,.markdown .out h2,.markdown .out h3,.markdown .out h4,.markdown .out h5,.markdown .out h6{margin:.1rem 0}.markdown .out blockquote{border-left:5px solid #f0f5f7;padding:0 .3rem;color:#666;margin:.4rem 0;font-size:.14rem;overflow:hidden}.markdown .out ol{margin:.2rem}.markdown .out ul{margin:.2rem 0;list-style:none}.markdown .out ul li:before{content:\\\"\\\\2022\\\";color:#1d71c0;margin-right:.1rem}.markdown .out ul li.task-list-item:before{content:\\\"\\\"}.markdown .out code{background:#f0f5f7;padding:.02rem .08rem;border-radius:3px}.markdown .out pre{padding:.2rem;margin:.2rem 0;background:#f0f5f7;overflow-x:auto;border-radius:3px;line-height:1.5}.markdown .out hr{border:none;border-top:.02rem solid #f0f5f7}.markdown .editor{display:flex;flex:1;min-height:100%}.markdown .editor p{margin:0;font-size:.14rem;white-space:nowrap;height:.21rem;letter-spacing:.01rem}.markdown .line-nums{min-width:.4rem;background:#30363a;padding:.15rem .05rem;text-align:right;color:#6f8b9c;border-right:1px dashed #535e63}.markdown .textarea{flex:1;background:#30363a;outline:none;padding:.15rem;color:#ddd}@media print{body,html{height:auto!important;overflow:auto!important}#disqus,.entries,.github,.markdown .cover:first-child{display:none!important}.container,.out{width:100%}.out{display:block!important;padding:0!important}}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?minimize!./~/sass-loader!./src/nuomi/markdown/style.scss\n// module id = 348\n// module chunks = 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/sass-loader/index.js!./style.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/sass-loader/index.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js?minimize!../../../node_modules/sass-loader/index.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/nuomi/markdown/style.scss\n// module id = 361\n// module chunks = 2","const GMD = require('./lib/GMD');\nmodule.exports = GMD;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gmd-markdown-parser/index.js\n// module id = 370\n// module chunks = 2","class GMD {\n    constructor () {\n        this.diffLines = [];\n        this.init();\n    }\n\n    init () {\n        this.markPattern = {\n            separator: {\n                regex: /^[\\-=\\*]{3,}/,\n                template: '<hr>',\n                singleLine: true,\n                lineStart: true,\n            },\n            emphasis: {\n                regex: /[\\*_]([^\\*_]+?)[\\*_](?!\\*)/,\n                template: '<em>$1</em>',\n                singleLine: false\n            },\n            strongEm: {\n                regex: /[\\*_]{2}(.*?)[\\*_]{2}/,\n                template: '<strong>$1</strong>',\n                singleLine: false\n            },\n            strikeThrough: {\n                regex: /~{2}(.*?)~{2}/,\n                template: '<del>$1</del>',\n                singleLine: false\n            },\n            ul: {\n                regex: /^[\\*\\-\\+]\\s([^\\n]+)/,\n                template: '<ul>$1</ul>',\n                singleLine: false,\n                lineStart: true\n            },\n            ol: {\n                regex: /^\\d+\\.\\s([^\\n]+)/,\n                template: '<ol>$1</ol>',\n                singleLine: false,\n                lineStart: true\n            },\n            link: {\n                regex: /(?:[^!]|^)\\[([^\\]]+?)\\]\\(([^\\)]+?)\\)/,\n                template: '<a href=\"$2\">$1</a>',\n                singleLine: false\n            },\n            img: {\n                regex: /!\\[([^\\]]*?)\\]\\(([^\\)]+?)\\)/,\n                template: '<img alt=\"$1\" src=\"$2\">',\n                singleLine: false\n            },\n            blockquote: {\n                regex: /^\\>\\s([^\\n]+)/,\n                template: '<blockquote>$1</blockquote>',\n                singleLine: false,\n                lineStart: true\n            },\n            code: {\n                regex: /`([^`\\n]+)`/,\n                template: '<code>$1</code>',\n                singleLine: false\n            },\n            pre: {\n                regex: /```(\\w+)([^`]+?)```/,\n                template: '<pre class=\"$1\">$2</pre>',\n                singleLine: false\n            },\n        }\n\n        // Add h1-h6 regex\n        for (let i = 1; i <= 6; i++) {\n            const reg = '^\\s*?' + '#'.repeat(i) + '\\\\s([^\\\\n]+)';\n            this.markPattern['h' + i] = {\n                regex: new RegExp(reg),\n                template: `<h${i}>$1</h${i}>`,\n                singleLine: false,\n                lineStart: true\n            };\n        }\n\n        // console.log(this.markPattern);\n    }\n\n    update () {\n        return this.parse(this.textarea.value);\n    }\n\n    parse (val) {\n        const lines = val.split(/\\n{2,}/);\n\n        const linesParsed = lines.map(line => {\n            return this.parseLine(line);\n        });\n\n        const result = linesParsed.join('\\n');\n\n        return result;\n    }\n\n    parseLine (line) {\n\n        let isBlockEle = false;\n        let isQuote = false; \n\n        for (let key in this.markPattern) {\n\n            const pattern = this.markPattern[key];\n\n            if (!pattern.regex.test(line)) {\n                continue;\n            }\n\n            if (pattern.singleLine) {\n                line = line.replace(pattern.regex, pattern.template);\n                return line;\n            }\n            \n            if (pattern.lineStart) {\n\n                if (['blockquote', 'ol', 'ul'].indexOf(key) >= 0) {\n                    const list = [];\n                    // const matches = line.match(new RegExp(pattern.regex, 'g'));\n                    const matches = line.split('\\n');\n                    \n                    matches.forEach(match => {\n\n                        if (key === 'blockquote') {\n                            const filtered = match.replace(/>\\s/, '');\n                            list.push(this.parseLine(filtered));\n                        } else {\n                            const filtered = match.replace(/[\\*\\-\\+]\\s|\\d+\\.\\s/, '');\n                            list.push(`<li>${filtered}</li>`);\n                        }\n                    });\n\n                    // console.log(list.join('\\n'), pattern.template, key);\n\n                    line = pattern.template.replace('$1', list.join(''));\n\n                    continue;\n                }\n\n                const filtered = pattern.template.replace('{data}', RegExp.$1);\n                \n                // line = line.replace(RegExp.$_, filtered);\n                line = line.replace(new RegExp(pattern.regex), pattern.template);\n\n                isBlockEle = true;\n\n                continue;\n                // line = line.replace(match[0], newContent);\n            }\n\n            line = line.replace(new RegExp(pattern.regex, 'g'), pattern.template);\n        }\n\n        if (!isBlockEle) {\n            return `<p>${line}</p>`;\n        } else {\n            return line;\n        }\n    }\n\n    diff () {\n\n    }\n\n}\n\nmodule.exports = GMD;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gmd-markdown-parser/lib/GMD.js\n// module id = 371\n// module chunks = 2","module.exports = \"<div class=markdown> <div class=cover> <div class=editor></div> </div> <div class=cover> <div class=out></div> </div> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/nuomi/markdown/template.html\n// module id = 378\n// module chunks = 2"],"sourceRoot":""}